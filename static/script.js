let allCourses=[],selectedCourses=new Map;function loadSelectedCourses(){const e=localStorage.getItem("selectedCourses");e&&(selectedCourses=new Map(JSON.parse(e)),updateSelectedList())}async function fetchCourses(){try{const e=await fetch("/lessons.json");allCourses=await e.json()}catch(e){console.error("Failed to fetch courses:",e)}}function searchCourses(e){return e?(e=e.toLowerCase(),allCourses.filter((t=>t.kcmc.toLowerCase().includes(e)||t.dgjsmc.toLowerCase().includes(e)||t.id.includes(e)))):[]}function updateSearchResults(e){document.querySelector(".search-results").innerHTML=e.map((e=>`\n        <div class="course-item">\n            <div class="course-info">\n                <div class="course-name">${e.kcmc}<div class="course-id">${e.id.substring(12)}</div></div>\n                <a class="course-teacher" href="https://nces.cra.moe/search/?q=${e.dgjsmc}" target="_blank">${e.dgjsmc}</a>\n                \n            </div>\n            <button class="btn" onclick="addCourse('${e.id}')">添加</button>\n        </div>\n    `)).join("")}function updateSelectedList(){document.querySelector(".selected-list").innerHTML=Array.from(selectedCourses.values()).map(((e,t)=>`\n        <div class="course-item" \n            draggable="true" \n            data-id="${e.id}"\n            data-priority="${t+1}">\n            <div class="drag-handle">⋮⋮</div>\n            <div class="course-info">\n                <div class="course-name">${e.kcmc}</div>\n                <div class="course-teacher">${e.dgjsmc}</div>\n                <div class="priority-label">优先级: ${t+1}</div>\n            </div>\n            <button class="btn btn-remove" onclick="removeCourse('${e.id}')">删除</button>\n        </div>\n    `)).join(""),setupDragAndDrop()}function setupDragAndDrop(){const e=document.querySelectorAll(".selected-list .course-item");document.querySelector(".selected-list");e.forEach((e=>{e.addEventListener("dragstart",handleDragStart),e.addEventListener("dragend",handleDragEnd),e.addEventListener("dragenter",handleDragEnter),e.addEventListener("dragleave",handleDragLeave),e.addEventListener("dragover",handleDragOver),e.addEventListener("drop",handleDragEnd)}))}function handleDragStart(e){e.target.closest(".selected-list")?(e.target.classList.add("dragging"),e.dataTransfer.effectAllowed="move",e.dataTransfer.setData("text/plain",e.target.dataset.id)):e.preventDefault()}function handleDragEnter(e){e.preventDefault(),e.target.classList.contains("course-item")&&!e.target.classList.contains("dragging")&&e.target.classList.add("drag-over")}function handleDragLeave(e){e.preventDefault(),e.target.classList.contains("course-item")&&e.target.classList.remove("drag-over")}function handleDragOver(e){e.preventDefault(),e.dataTransfer.dropEffect="move";const t=document.querySelector(".dragging");if(!t)return;const s=document.querySelector(".selected-list"),r=[...s.querySelectorAll(".course-item:not(.dragging)")].find((t=>{const s=t.getBoundingClientRect();return e.clientY<s.top+s.height/2}));r?s.insertBefore(t,r):s.appendChild(t)}function handleDragEnd(e){e.preventDefault();document.querySelectorAll(".course-item").forEach((e=>{e.classList.remove("dragging","drag-over")})),updatePriorities()}function updatePriorities(){const e=document.querySelectorAll(".selected-list .course-item"),t=new Map;e.forEach(((e,s)=>{const r=e.dataset.id,n=selectedCourses.get(r);n&&(n.priority=s+1,t.set(r,n),e.querySelector(".priority-label").textContent=`优先级: ${s+1}`)})),selectedCourses=t,saveToLocalStorage()}function addCourse(e){const t=allCourses.find((t=>t.id===e));t&&!selectedCourses.has(e)&&(selectedCourses.set(e,t),updateSelectedList(),saveToLocalStorage())}function removeCourse(e){selectedCourses.has(e)&&(selectedCourses.delete(e),updateSelectedList(),saveToLocalStorage())}function saveToLocalStorage(){const e=Array.from(selectedCourses.entries()).map((([e,t])=>[e,{...t,priority:t.priority,active:!0}]));localStorage.setItem("selectedCourses",JSON.stringify(e))}function isExperiment(e){return!(e.id.charCodeAt(e.id.length-1)<60)}function generateSchedule(){if(0!==selectedCourses.size){for(const e of selectedCourses.values())if(isExperiment(e)&&!selectedCourses.has(e.id.substring(0,e.id.length-1)))return void alert(`请先选择 ${e.kcmc} ${e.id.substring(12)} 前置课程 ${e.id.substring(12,e.id.length-1)}`);window.location.href="schedule.html"}else alert("请先选择课程！")}document.addEventListener("DOMContentLoaded",(async()=>{await fetchCourses(),loadSelectedCourses();document.querySelector(".search-box").addEventListener("input",(e=>{updateSearchResults(searchCourses(e.target.value))}))}));const searchInput=document.getElementById("search-input");searchInput.addEventListener("input",(function(){document.getElementById("no-result").style.display=this.value?"none":"block"})),document.addEventListener("keydown",(function(e){switch(e.key){case"Enter":generateSchedule();break;case"i":document.activeElement!==searchInput&&(searchInput.focus(),e.preventDefault())}}));